% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/file_service.R
\name{FileService}
\alias{FileService}
\title{FileService}
\format{
\code{\link{R6Class}} object.
}
\description{
FileService

FileService
}
\section{Methods}{

\describe{
   \item{\code{upload(file,bytes)}}{method}
   \item{\code{append(file,bytes)}}{method}
   \item{\code{download(fileDocumentId)}}{method}
}
}

\section{Super class}{
\code{\link[tercen:HttpClientService]{tercen::HttpClientService}} -> \code{FileService}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{FileService$new()}}
\item \href{#method-findFileByWorkflowIdAndStepId}{\code{FileService$findFileByWorkflowIdAndStepId()}}
\item \href{#method-findFileByTaskId}{\code{FileService$findFileByTaskId()}}
\item \href{#method-findByDataUri}{\code{FileService$findByDataUri()}}
\item \href{#method-upload}{\code{FileService$upload()}}
\item \href{#method-append}{\code{FileService$append()}}
\item \href{#method-download}{\code{FileService$download()}}
\item \href{#method-clone}{\code{FileService$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="tercen" data-topic="HttpClientService" data-id="create">}\href{../../tercen/html/HttpClientService.html#method-create}{\code{tercen::HttpClientService$create()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercen" data-topic="HttpClientService" data-id="delete">}\href{../../tercen/html/HttpClientService.html#method-delete}{\code{tercen::HttpClientService$delete()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercen" data-topic="HttpClientService" data-id="findKeys">}\href{../../tercen/html/HttpClientService.html#method-findKeys}{\code{tercen::HttpClientService$findKeys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercen" data-topic="HttpClientService" data-id="findStartKeys">}\href{../../tercen/html/HttpClientService.html#method-findStartKeys}{\code{tercen::HttpClientService$findStartKeys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercen" data-topic="HttpClientService" data-id="fromTson">}\href{../../tercen/html/HttpClientService.html#method-fromTson}{\code{tercen::HttpClientService$fromTson()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercen" data-topic="HttpClientService" data-id="get">}\href{../../tercen/html/HttpClientService.html#method-get}{\code{tercen::HttpClientService$get()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercen" data-topic="HttpClientService" data-id="getServiceUri">}\href{../../tercen/html/HttpClientService.html#method-getServiceUri}{\code{tercen::HttpClientService$getServiceUri()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercen" data-topic="HttpClientService" data-id="list">}\href{../../tercen/html/HttpClientService.html#method-list}{\code{tercen::HttpClientService$list()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercen" data-topic="HttpClientService" data-id="onResponseError">}\href{../../tercen/html/HttpClientService.html#method-onResponseError}{\code{tercen::HttpClientService$onResponseError()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercen" data-topic="HttpClientService" data-id="toTson">}\href{../../tercen/html/HttpClientService.html#method-toTson}{\code{tercen::HttpClientService$toTson()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercen" data-topic="HttpClientService" data-id="update">}\href{../../tercen/html/HttpClientService.html#method-update}{\code{tercen::HttpClientService$update()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileService$new(baseRestUri, client)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-findFileByWorkflowIdAndStepId"></a>}}
\if{latex}{\out{\hypertarget{method-findFileByWorkflowIdAndStepId}{}}}
\subsection{Method \code{findFileByWorkflowIdAndStepId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileService$findFileByWorkflowIdAndStepId(
  startKey = NULL,
  endKey = NULL,
  limit = 20,
  skip = 0,
  descending = TRUE,
  useFactory = FALSE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-findFileByTaskId"></a>}}
\if{latex}{\out{\hypertarget{method-findFileByTaskId}{}}}
\subsection{Method \code{findFileByTaskId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileService$findFileByTaskId(
  startKey = NULL,
  endKey = NULL,
  limit = 20,
  skip = 0,
  descending = TRUE,
  useFactory = FALSE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-findByDataUri"></a>}}
\if{latex}{\out{\hypertarget{method-findByDataUri}{}}}
\subsection{Method \code{findByDataUri()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileService$findByDataUri(
  startKey = NULL,
  endKey = NULL,
  limit = 20,
  skip = 0,
  descending = TRUE,
  useFactory = FALSE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-upload"></a>}}
\if{latex}{\out{\hypertarget{method-upload}{}}}
\subsection{Method \code{upload()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileService$upload(file, bytes)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-append"></a>}}
\if{latex}{\out{\hypertarget{method-append}{}}}
\subsection{Method \code{append()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileService$append(file, bytes)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-download"></a>}}
\if{latex}{\out{\hypertarget{method-download}{}}}
\subsection{Method \code{download()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileService$download(fileDocumentId)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileService$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
