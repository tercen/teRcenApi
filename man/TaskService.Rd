% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/task_service.R
\name{TaskService}
\alias{TaskService}
\title{TaskService}
\format{
\code{\link{R6Class}} object.
}
\description{
TaskService

TaskService
}
\section{Methods}{

\describe{
   \item{\code{runTask(taskId)}}{method}
   \item{\code{cancelTask(taskId)}}{method}
   \item{\code{waitDone(taskId)}}{method}
   \item{\code{updateWorker(worker)}}{method}
   \item{\code{taskDurationByTeam(teamId,year,month)}}{method}
}
}

\section{Super class}{
\code{\link[tercenApi:HttpClientService]{tercenApi::HttpClientService}} -> \code{TaskService}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{TaskService$new()}}
\item \href{#method-findByHash}{\code{TaskService$findByHash()}}
\item \href{#method-findGCTaskByLastModifiedDate}{\code{TaskService$findGCTaskByLastModifiedDate()}}
\item \href{#method-runTask}{\code{TaskService$runTask()}}
\item \href{#method-cancelTask}{\code{TaskService$cancelTask()}}
\item \href{#method-waitDone}{\code{TaskService$waitDone()}}
\item \href{#method-updateWorker}{\code{TaskService$updateWorker()}}
\item \href{#method-taskDurationByTeam}{\code{TaskService$taskDurationByTeam()}}
\item \href{#method-clone}{\code{TaskService$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="create">}\href{../../tercenApi/html/HttpClientService.html#method-create}{\code{tercenApi::HttpClientService$create()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="delete">}\href{../../tercenApi/html/HttpClientService.html#method-delete}{\code{tercenApi::HttpClientService$delete()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="findKeys">}\href{../../tercenApi/html/HttpClientService.html#method-findKeys}{\code{tercenApi::HttpClientService$findKeys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="findStartKeys">}\href{../../tercenApi/html/HttpClientService.html#method-findStartKeys}{\code{tercenApi::HttpClientService$findStartKeys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="fromTson">}\href{../../tercenApi/html/HttpClientService.html#method-fromTson}{\code{tercenApi::HttpClientService$fromTson()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="get">}\href{../../tercenApi/html/HttpClientService.html#method-get}{\code{tercenApi::HttpClientService$get()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="getServiceUri">}\href{../../tercenApi/html/HttpClientService.html#method-getServiceUri}{\code{tercenApi::HttpClientService$getServiceUri()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="list">}\href{../../tercenApi/html/HttpClientService.html#method-list}{\code{tercenApi::HttpClientService$list()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="onResponseError">}\href{../../tercenApi/html/HttpClientService.html#method-onResponseError}{\code{tercenApi::HttpClientService$onResponseError()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="toTson">}\href{../../tercenApi/html/HttpClientService.html#method-toTson}{\code{tercenApi::HttpClientService$toTson()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="update">}\href{../../tercenApi/html/HttpClientService.html#method-update}{\code{tercenApi::HttpClientService$update()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TaskService$new(baseRestUri, client)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-findByHash"></a>}}
\if{latex}{\out{\hypertarget{method-findByHash}{}}}
\subsection{Method \code{findByHash()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TaskService$findByHash(
  startKey = NULL,
  endKey = NULL,
  limit = 20,
  skip = 0,
  descending = TRUE,
  useFactory = FALSE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-findGCTaskByLastModifiedDate"></a>}}
\if{latex}{\out{\hypertarget{method-findGCTaskByLastModifiedDate}{}}}
\subsection{Method \code{findGCTaskByLastModifiedDate()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TaskService$findGCTaskByLastModifiedDate(
  startKey = NULL,
  endKey = NULL,
  limit = 20,
  skip = 0,
  descending = TRUE,
  useFactory = FALSE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-runTask"></a>}}
\if{latex}{\out{\hypertarget{method-runTask}{}}}
\subsection{Method \code{runTask()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TaskService$runTask(taskId)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cancelTask"></a>}}
\if{latex}{\out{\hypertarget{method-cancelTask}{}}}
\subsection{Method \code{cancelTask()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TaskService$cancelTask(taskId)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-waitDone"></a>}}
\if{latex}{\out{\hypertarget{method-waitDone}{}}}
\subsection{Method \code{waitDone()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TaskService$waitDone(taskId)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-updateWorker"></a>}}
\if{latex}{\out{\hypertarget{method-updateWorker}{}}}
\subsection{Method \code{updateWorker()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TaskService$updateWorker(worker)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-taskDurationByTeam"></a>}}
\if{latex}{\out{\hypertarget{method-taskDurationByTeam}{}}}
\subsection{Method \code{taskDurationByTeam()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TaskService$taskDurationByTeam(teamId, year, month)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TaskService$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
