% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/persistent_service.R
\name{PersistentService}
\alias{PersistentService}
\title{PersistentService}
\format{
\code{\link{R6Class}} object.
}
\description{
PersistentService

PersistentService
}
\section{Methods}{

\describe{
   \item{\code{summary(teamOrProjectId)}}{method}
   \item{\code{getDependentObjects(id)}}{method}
   \item{\code{getDependentObjectIds(id)}}{method}
}
}

\section{Super class}{
\code{\link[tercenApi:HttpClientService]{tercenApi::HttpClientService}} -> \code{PersistentService}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{PersistentService$new()}}
\item \href{#method-findDeleted}{\code{PersistentService$findDeleted()}}
\item \href{#method-findByKind}{\code{PersistentService$findByKind()}}
\item \href{#method-summary}{\code{PersistentService$summary()}}
\item \href{#method-getDependentObjects}{\code{PersistentService$getDependentObjects()}}
\item \href{#method-getDependentObjectIds}{\code{PersistentService$getDependentObjectIds()}}
\item \href{#method-clone}{\code{PersistentService$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="create">}\href{../../tercenApi/html/HttpClientService.html#method-create}{\code{tercenApi::HttpClientService$create()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="delete">}\href{../../tercenApi/html/HttpClientService.html#method-delete}{\code{tercenApi::HttpClientService$delete()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="findKeys">}\href{../../tercenApi/html/HttpClientService.html#method-findKeys}{\code{tercenApi::HttpClientService$findKeys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="findStartKeys">}\href{../../tercenApi/html/HttpClientService.html#method-findStartKeys}{\code{tercenApi::HttpClientService$findStartKeys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="fromTson">}\href{../../tercenApi/html/HttpClientService.html#method-fromTson}{\code{tercenApi::HttpClientService$fromTson()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="get">}\href{../../tercenApi/html/HttpClientService.html#method-get}{\code{tercenApi::HttpClientService$get()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="getServiceUri">}\href{../../tercenApi/html/HttpClientService.html#method-getServiceUri}{\code{tercenApi::HttpClientService$getServiceUri()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="list">}\href{../../tercenApi/html/HttpClientService.html#method-list}{\code{tercenApi::HttpClientService$list()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="onResponseError">}\href{../../tercenApi/html/HttpClientService.html#method-onResponseError}{\code{tercenApi::HttpClientService$onResponseError()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="toTson">}\href{../../tercenApi/html/HttpClientService.html#method-toTson}{\code{tercenApi::HttpClientService$toTson()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="update">}\href{../../tercenApi/html/HttpClientService.html#method-update}{\code{tercenApi::HttpClientService$update()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PersistentService$new(baseRestUri, client)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-findDeleted"></a>}}
\if{latex}{\out{\hypertarget{method-findDeleted}{}}}
\subsection{Method \code{findDeleted()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PersistentService$findDeleted(keys = NULL, useFactory = FALSE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-findByKind"></a>}}
\if{latex}{\out{\hypertarget{method-findByKind}{}}}
\subsection{Method \code{findByKind()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PersistentService$findByKind(keys = NULL, useFactory = FALSE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-summary"></a>}}
\if{latex}{\out{\hypertarget{method-summary}{}}}
\subsection{Method \code{summary()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PersistentService$summary(teamOrProjectId)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getDependentObjects"></a>}}
\if{latex}{\out{\hypertarget{method-getDependentObjects}{}}}
\subsection{Method \code{getDependentObjects()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PersistentService$getDependentObjects(id)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getDependentObjectIds"></a>}}
\if{latex}{\out{\hypertarget{method-getDependentObjectIds}{}}}
\subsection{Method \code{getDependentObjectIds()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PersistentService$getDependentObjectIds(id)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PersistentService$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
