% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/worker_service.R
\name{WorkerService}
\alias{WorkerService}
\title{WorkerService}
\format{
\code{\link{R6Class}} object.
}
\description{
WorkerService

WorkerService
}
\section{Methods}{

\describe{
   \item{\code{exec(task)}}{method}
   \item{\code{setPriority(priority)}}{method}
   \item{\code{setStatus(status)}}{method}
   \item{\code{setHeartBeat(heartBeat)}}{method}
   \item{\code{getState(all)}}{method}
   \item{\code{updateTaskEnv(taskId,env)}}{method}
   \item{\code{getTaskEnv(taskId)}}{method}
}
}

\section{Super class}{
\code{\link[tercenApi:HttpClientService]{tercenApi::HttpClientService}} -> \code{WorkerService}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{WorkerService$new()}}
\item \href{#method-exec}{\code{WorkerService$exec()}}
\item \href{#method-setPriority}{\code{WorkerService$setPriority()}}
\item \href{#method-setStatus}{\code{WorkerService$setStatus()}}
\item \href{#method-setHeartBeat}{\code{WorkerService$setHeartBeat()}}
\item \href{#method-getState}{\code{WorkerService$getState()}}
\item \href{#method-updateTaskEnv}{\code{WorkerService$updateTaskEnv()}}
\item \href{#method-getTaskEnv}{\code{WorkerService$getTaskEnv()}}
\item \href{#method-clone}{\code{WorkerService$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="create">}\href{../../tercenApi/html/HttpClientService.html#method-create}{\code{tercenApi::HttpClientService$create()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="delete">}\href{../../tercenApi/html/HttpClientService.html#method-delete}{\code{tercenApi::HttpClientService$delete()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="findKeys">}\href{../../tercenApi/html/HttpClientService.html#method-findKeys}{\code{tercenApi::HttpClientService$findKeys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="findStartKeys">}\href{../../tercenApi/html/HttpClientService.html#method-findStartKeys}{\code{tercenApi::HttpClientService$findStartKeys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="fromTson">}\href{../../tercenApi/html/HttpClientService.html#method-fromTson}{\code{tercenApi::HttpClientService$fromTson()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="get">}\href{../../tercenApi/html/HttpClientService.html#method-get}{\code{tercenApi::HttpClientService$get()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="getServiceUri">}\href{../../tercenApi/html/HttpClientService.html#method-getServiceUri}{\code{tercenApi::HttpClientService$getServiceUri()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="list">}\href{../../tercenApi/html/HttpClientService.html#method-list}{\code{tercenApi::HttpClientService$list()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="onResponseError">}\href{../../tercenApi/html/HttpClientService.html#method-onResponseError}{\code{tercenApi::HttpClientService$onResponseError()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="toTson">}\href{../../tercenApi/html/HttpClientService.html#method-toTson}{\code{tercenApi::HttpClientService$toTson()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="update">}\href{../../tercenApi/html/HttpClientService.html#method-update}{\code{tercenApi::HttpClientService$update()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WorkerService$new(baseRestUri, client)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-exec"></a>}}
\if{latex}{\out{\hypertarget{method-exec}{}}}
\subsection{Method \code{exec()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WorkerService$exec(task)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setPriority"></a>}}
\if{latex}{\out{\hypertarget{method-setPriority}{}}}
\subsection{Method \code{setPriority()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WorkerService$setPriority(priority)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setStatus"></a>}}
\if{latex}{\out{\hypertarget{method-setStatus}{}}}
\subsection{Method \code{setStatus()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WorkerService$setStatus(status)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setHeartBeat"></a>}}
\if{latex}{\out{\hypertarget{method-setHeartBeat}{}}}
\subsection{Method \code{setHeartBeat()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WorkerService$setHeartBeat(heartBeat)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getState"></a>}}
\if{latex}{\out{\hypertarget{method-getState}{}}}
\subsection{Method \code{getState()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WorkerService$getState(all)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-updateTaskEnv"></a>}}
\if{latex}{\out{\hypertarget{method-updateTaskEnv}{}}}
\subsection{Method \code{updateTaskEnv()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WorkerService$updateTaskEnv(taskId, env)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getTaskEnv"></a>}}
\if{latex}{\out{\hypertarget{method-getTaskEnv}{}}}
\subsection{Method \code{getTaskEnv()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WorkerService$getTaskEnv(taskId)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WorkerService$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
