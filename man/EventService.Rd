% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/event_service.R
\name{EventService}
\alias{EventService}
\title{EventService}
\format{
\code{\link{R6Class}} object.
}
\description{
EventService

EventService
}
\section{Methods}{

\describe{
   \item{\code{sendChannel(channel,evt)}}{method}
   \item{\code{channel(name)}}{method}
   \item{\code{listenTaskChannel(taskId,start)}}{method}
   \item{\code{onTaskState(taskId)}}{method}
   \item{\code{taskListenerCount(taskId)}}{method}
}
}

\section{Super class}{
\code{\link[tercenApi:HttpClientService]{tercenApi::HttpClientService}} -> \code{EventService}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{EventService$new()}}
\item \href{#method-sendChannel}{\code{EventService$sendChannel()}}
\item \href{#method-channel}{\code{EventService$channel()}}
\item \href{#method-listenTaskChannel}{\code{EventService$listenTaskChannel()}}
\item \href{#method-onTaskState}{\code{EventService$onTaskState()}}
\item \href{#method-taskListenerCount}{\code{EventService$taskListenerCount()}}
\item \href{#method-clone}{\code{EventService$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="create">}\href{../../tercenApi/html/HttpClientService.html#method-create}{\code{tercenApi::HttpClientService$create()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="delete">}\href{../../tercenApi/html/HttpClientService.html#method-delete}{\code{tercenApi::HttpClientService$delete()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="findKeys">}\href{../../tercenApi/html/HttpClientService.html#method-findKeys}{\code{tercenApi::HttpClientService$findKeys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="findStartKeys">}\href{../../tercenApi/html/HttpClientService.html#method-findStartKeys}{\code{tercenApi::HttpClientService$findStartKeys()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="fromTson">}\href{../../tercenApi/html/HttpClientService.html#method-fromTson}{\code{tercenApi::HttpClientService$fromTson()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="get">}\href{../../tercenApi/html/HttpClientService.html#method-get}{\code{tercenApi::HttpClientService$get()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="getServiceUri">}\href{../../tercenApi/html/HttpClientService.html#method-getServiceUri}{\code{tercenApi::HttpClientService$getServiceUri()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="list">}\href{../../tercenApi/html/HttpClientService.html#method-list}{\code{tercenApi::HttpClientService$list()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="onResponseError">}\href{../../tercenApi/html/HttpClientService.html#method-onResponseError}{\code{tercenApi::HttpClientService$onResponseError()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="toTson">}\href{../../tercenApi/html/HttpClientService.html#method-toTson}{\code{tercenApi::HttpClientService$toTson()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tercenApi" data-topic="HttpClientService" data-id="update">}\href{../../tercenApi/html/HttpClientService.html#method-update}{\code{tercenApi::HttpClientService$update()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EventService$new(baseRestUri, client)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-sendChannel"></a>}}
\if{latex}{\out{\hypertarget{method-sendChannel}{}}}
\subsection{Method \code{sendChannel()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EventService$sendChannel(channel, evt)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-channel"></a>}}
\if{latex}{\out{\hypertarget{method-channel}{}}}
\subsection{Method \code{channel()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EventService$channel(name)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-listenTaskChannel"></a>}}
\if{latex}{\out{\hypertarget{method-listenTaskChannel}{}}}
\subsection{Method \code{listenTaskChannel()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EventService$listenTaskChannel(taskId, start)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-onTaskState"></a>}}
\if{latex}{\out{\hypertarget{method-onTaskState}{}}}
\subsection{Method \code{onTaskState()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EventService$onTaskState(taskId)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-taskListenerCount"></a>}}
\if{latex}{\out{\hypertarget{method-taskListenerCount}{}}}
\subsection{Method \code{taskListenerCount()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EventService$taskListenerCount(taskId)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EventService$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
